<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>排序 on AlfredNing</title>
    <link>http://localhost:1313/tags/%E6%8E%92%E5%BA%8F/</link>
    <description>Recent content in 排序 on AlfredNing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 18 Aug 2024 13:30:46 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>排序之归并排序</title>
      <link>http://localhost:1313/note/program/java/%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 18 Aug 2024 13:30:46 +0800</pubDate>
      
      <guid>http://localhost:1313/note/program/java/%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>原理介绍 采用分治核心思想 代码实现 import java.util.Arrays; /** * 归并排序 * * @author Alfred.Ning * @since 2024年08月18日 20:24:00 */ public class MergeSort { public static void main(String[] args) { int[] nums = {8, 4, 5, 7, 9, 3, 2, 6, 1}; int[] nums1 = new int[nums.length]; System.arraycopy(nums, 0, nums1, 0, nums.length); MergeSort mergeSort = new MergeSort(); mergeSort.mergeSort(nums); mergeSort.sort(nums1); for (int i = 0; i &amp;lt; nums.length; i++) { if (nums[i] != nums1[i]) { System.</description>
    </item>
    
    <item>
      <title>排序之冒泡排序</title>
      <link>http://localhost:1313/note/program/java/%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 18 Aug 2024 13:30:39 +0800</pubDate>
      
      <guid>http://localhost:1313/note/program/java/%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
